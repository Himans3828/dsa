#include <iostream>
using namespace std;

void sort(int *arr, int s, int e) {
  // cout << " " << s << " " << endl;
  //  cout << endl;
  // cout << " " << e << " " << endl;
  //  cout << endl;
   int mid = s + (e - s) / 2;

  int len1 = mid - s + 1;
  cout << " " << endl;
  // cout << len1 << endl;
  int len2 = e - mid;
  // cout << len2 << endl;
  int *first = new int[len1];
  int *second = new int[len2];

  int main = s;
  for (int i = 0; i < len1; i++) {

    first[i] = arr[main++];
  }
  main = mid + 1;
  for (int i = 0; i < len2; i++) {
    second[i] = arr[main++];
  }
  main = s;
  int index = 0;
  int index1 = 0;
  while (index < len1 && index1 < len2) {
    if (first[index] < second[index1]) {
      arr[main++] = first[index++];
    }

    else {
      arr[main++] = second[index1++];
    }
  }

  while (index < len1) {
    arr[main++] = first[index++];
  }
  while (index1 < len2) {
    arr[main++] = second[index1++];
  }
  delete[] first;
  delete[] second;
}

void merge(int *arr, int s, int e) {
  cout << " " << s << " " << endl;
  cout << " " << e << " " << endl;
  int mid = s + (e - s) / 2;
  
  if (s >= e) {
    return;
  }
  // for left side
  merge(arr, s, mid);
  // for right side
  merge(arr, mid + 1, e);
  sort(arr, s, e);
}

int main() {
  int n;
  cin >> n;
  int arr[n];
  for (int i = 0; i < n; i++) {
    cin >> arr[i];
  }

  merge(arr, 0, n - 1);
  cout << "   " << endl;
  // for (int i = 0; i < n; i++) {
  //   cout << arr[i] << " " << endl;
  // }
  return 0;
}
